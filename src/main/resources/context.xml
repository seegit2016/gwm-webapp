<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	
	<context:component-scan base-package="com.zhanyun"></context:component-scan>
	
	<context:property-placeholder location="classpath:db.properties"/>  

	<!--
		DATABASE SETUP
	 -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/growing?characterEncoding=utf-8" />
		<property name="user" value="root" />
		<property name="password" value="" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>
		<!-- <property name="packagesToScan" value="com.zhanyun.gwm.entity"></property>  -->
		
        <property name="packagesToScan"><!-- 自动扫描注解 -->  
	         <list>  
	            <value>com.zhanyun.gwm.entity</value> 
	            <value>com.zhanyun.baseweb.entity</value>  
	         </list>  
        </property>  

		<property name="jpaProperties">
			<props>
				<!-- 二级缓存相关 -->
				<!--  
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache-hibernate.xml</prop>
				-->
				<!-- 生成的数据表的列的映射策略 -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- hibernate 基本属性 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	


	<bean id="userService" class="com.zhanyun.baseweb.service.UserService">
	</bean>	
<!--	
	<bean id="newsEntryDao" class="com.zhanyun.gwm.dao.newsentry.JpaNewsEntryDao">
	</bean>
 	
	<bean id="userDao" class="com.zhanyun.gwm.dao.user.JpaUserDao">
	</bean>
	
	<bean id="dataBaseInitializer" class="com.zhanyun.gwm.dao.DataBaseInitializer" init-method="initDataBase">
		<constructor-arg ref="userDao" />
		<constructor-arg ref="newsEntryDao" />
		<constructor-arg ref="passwordEncoder" />
	</bean> -->

	<tx:annotation-driven transaction-manager="transactionManager" />


	<jpa:repositories  base-package="com.zhanyun.gwm,com.zhanyun.baseweb"
		entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>

		
	<!--
		INIT REST COMPONENTS 
	 -->
	
<!-- 	<context:component-scan base-package="com.zhanyun.gwm.rest.resources" /> -->
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.zhanyun.baseweb.util.UnauthorizedEntryPoint" />

	<bean class="com.zhanyun.baseweb.util.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
<!-- 		<constructor-arg ref="userService" /> -->
	</bean>
	
</beans>